{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithOutToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","Authorization","types","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","clearActiveEvent","eventUpdated","deletedEvent","eventsLoaded","login","user","checkingFinish","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","e","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","message","Swal","fire","placeholder","onChange","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","openModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","endDate","setEndDate","formValues","setFormValues","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","useEffect","reqCloseModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","startAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.986a1fda.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\nconst fetchWithOutToken = ( endPoint, data, method =\"GET\" )=>{\r\n    const url = `${baseUrl}${endPoint}`;\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchWithToken = ( endPoint, data, method =\"GET\" )=>{\r\n    const url = `${baseUrl}${endPoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                Authorization: token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchWithOutToken,\r\n    fetchWithToken\r\n}\r\n","\r\nexport const types = {\r\n\r\n    uiOpenModal: \"[UI] Open Modal\",\r\n    uiCloseModal: \"[UI] Close Modal\",\r\n\r\n    eventStartAddNew: \"[event] Start Add New Event\",\r\n    eventAddNew: \"[event] Add New\",\r\n    eventSetActive: \"[event] Set Active\",\r\n    eventClear: \"[event] Clear Active Event\",\r\n    eventUpdated: \"[event] Event Updated\",\r\n    eventDeleted: \"[event] Event Deleted\",\r\n    eventLoaded: \"[event] Events Loaded\",\r\n    eventLogout: \"[event] Logout Events\",\r\n\r\n    authCheckingFinish: \"[auth] Finish Checking State\",\r\n    authStartLogin: \"[auth] Start Login\",\r\n    authLogin: \"[auth] Login\",\r\n    authStartRegister: \"[auth] Start Register\",\r\n    authStartTokenRefresh: \"[auth] Start Token Refresh\",\r\n    authLogout: \"[auth] Logout\"\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] )=>{\r\n    return events.map(event => ({\r\n        ...event,\r\n        end: moment( event.end ).toDate(),\r\n        start: moment( event.start ).toDate()\r\n    }));\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchWithToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const setActiveEvent = (event)=>{\r\n    return{\r\n        type:types.eventSetActive,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const startAddNew = (event)=>{\r\n    return async(dispatch, getState)=>{\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken( '/events',event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                dispatch( eventAddNew( event))\r\n            }else{\r\n                if (body.message) {\r\n                    Swal.fire('Error', body.message, 'error');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event)=>{\r\n    return{\r\n        type: types.eventAddNew,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const clearActiveEvent = ()=>({type: types.eventClear});\r\n\r\nexport const startEventUpdate = (event)=>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchWithToken(`/events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated( event ) );\r\n            }else{\r\n                if (body.message) {\r\n                    Swal.fire('Error', body.message, 'error');\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event)=>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const startDeleteEvent = ()=>{\r\n    return async(dispatch, getState)=>{\r\n        try {\r\n            const event = getState().calendar.activeEvent;\r\n            const resp = await fetchWithToken(`/events/${ event.id }`,{}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( deletedEvent() );\r\n                Swal.fire('Eliminado', body.message, 'info');\r\n            }else{\r\n                if (body.message) {\r\n                    Swal.fire('Error', body.message,'error');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst deletedEvent = ()=>({type: types.eventDeleted});\r\n\r\nexport const startEventsLoading = ()=>{\r\n    return async(dispatch) =>{\r\n        try {\r\n            const resp = await fetchWithToken('/events');\r\n            const body = await resp.json();\r\n\r\n            let events = prepareEvents( body.events );\r\n\r\n            if (body.ok) {\r\n                dispatch( eventsLoaded( events ) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventsLoaded = ( events )=>({ type: types.eventLoaded, payload: events });\r\n\r\nexport const logoutEvents = ()=>({type: types.eventLogout});","import Swal from \"sweetalert2\";\r\nimport { fetchWithOutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { logoutEvents } from \"./events\";\r\n\r\nexport const startLogin = (email, password)=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchWithOutToken('/auth/login', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('tokenInitDate', new Date().getTime());\r\n\r\n            dispatch( login( { uid: body.uid, name: body.name } ) );\r\n        }else{\r\n            if (body.message) {\r\n                Swal.fire('Error', body.message, 'error');\r\n            }else{\r\n                //Manejar un state de errores\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name)=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchWithOutToken('/auth/register', { email, password, name }, \"POST\");\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('tokenInitDate', new Date().getTime());\r\n\r\n            dispatch( login( { uid: body.uid, name: body.name } ) );\r\n        }else{\r\n            if (body.message) {\r\n                return Swal.fire('Error', body.message, 'error');\r\n            }else{\r\n                //Usar el state del error\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst login = ( user )=>({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startChecking = ()=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchWithToken('/auth/refresh');\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('tokenInitDate', new Date().getTime());\r\n\r\n            dispatch( login( { uid: body.uid, name: body.name } ) );\r\n        }else{\r\n            dispatch( checkingFinish() );\r\n            dispatch( startLogout() )\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = ()=>{\r\n    return {\r\n        type: types.authCheckingFinish\r\n    }\r\n}\r\n\r\nexport const startLogout = ()=>{\r\n    return (dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch( logoutEvents() );\r\n        dispatch( logout() )\r\n    }\r\n}\r\n\r\nexport const logout = ()=>({ type: types.authLogout });","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {})=>{\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ()=>{\r\n        setValues( initialState )\r\n    }\r\n\r\n    const handleInputChange = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport \"./login.css\";\r\n\r\nconst LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: \"josesito3@gmail.com\",\r\n        lPassword: \"1234567890\"\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: \"Julio\",\r\n        rEmail: \"julio@gmail.com\",\r\n        rPassword: \"1234567890\",\r\n        rPassword2: \"1234567890\"\r\n    });\r\n\r\n    const { rEmail, rName, rPassword, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n    const handleRegister = e =>{\r\n        e.preventDefault();\r\n\r\n        if (rPassword !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister( rEmail, rPassword, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword\"\r\n                                value={ rPassword }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  startLogout } from '../../actions/auth';\r\n\r\nconst NavBar = () => {\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = ()=>{\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4 px-3\">\r\n            <span className=\"navbar-brand\">\r\n                { name } \r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick={ handleLogout }>\r\n                <i className=\"fas fa-sign-out-alt\">\r\n\r\n                </i>\r\n                <span > Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nconst CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title } </strong>\r\n            <strong>- { user.name }</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarEvent\r\n","import { types } from \"../types/types\"\r\n\r\nexport const openModal = ()=>{\r\n    return{\r\n        type: types.uiOpenModal\r\n    }\r\n}\r\n\r\nexport const closeModal = ()=>{\r\n    return{\r\n        type: types.uiCloseModal\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeModal } from '../../actions/ui';\r\nimport { clearActiveEvent, startAddNew, startEventUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nconst CalendarModal = () => {\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [endDate, setEndDate] = useState(nowPlus1.toDate());\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch();\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const reqCloseModal = ()=>{\r\n        dispatch( closeModal() );\r\n        dispatch( clearActiveEvent() )\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = e =>{\r\n        setDateStart( e )\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = e =>{\r\n        setEndDate( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleInputChange = e =>{\r\n        const { name, value } = e.target;\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = e =>{\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire('Error', 'La fecha fin debe ser mayor que la fecha inicio', 'error');\r\n            return;\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            setTitleValid(false);\r\n            return;\r\n        }\r\n        //TODO: Realizar grabación en db\r\n        setTitleValid(true);\r\n        \r\n        if (activeEvent) {\r\n            dispatch(startEventUpdate( formValues ));\r\n        }else{\r\n            dispatch( startAddNew(formValues));\r\n        }\r\n\r\n        reqCloseModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ reqCloseModal }\r\n          style={ customStyles }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n          closeTimeoutMS={ 200 }\r\n        >\r\n            <h1> {activeEvent ? \"Editar evento\" : \"Nuevo evento\"} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={ handleSubmitForm } >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker \r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker \r\n                        onChange={ handleEndDateChange }\r\n                        value={ endDate }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CalendarModal\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { openModal } from '../../actions/ui';\r\n\r\nconst AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = ()=>{\r\n        dispatch( openModal() )\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={ handleOpenModal }>\r\n            <i className=\"fas fa-plus\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startDeleteEvent } from '../../actions/events';\r\n\r\nconst DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleDeleteEvent = ()=>{\r\n        dispatch( startDeleteEvent() )\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={ handleDeleteEvent }>\r\n            <i className=\"fas fa-trash\" />\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"moment/locale/es\";\r\n\r\nimport NavBar from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openModal } from '../../actions/ui';\r\nimport { clearActiveEvent, setActiveEvent, startEventsLoading } from '../../actions/events';\r\nimport AddNewFab from '../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst CalendarScreen = () => {\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        dispatch( startEventsLoading() )\r\n    }, [ dispatch ])\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected )=>{\r\n        const style = {\r\n            backgroundColor: event.user._id === uid ? \"#367Cf7\" : \"#465660\",\r\n            borderRadius: \"0px\",\r\n            opacity: 0.8,\r\n            display: \"block\",\r\n            color: \"white\"\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const onDoubleClick = (e)=>{\r\n        if (e.user._id === uid) {\r\n            dispatch( openModal() );\r\n        }\r\n    }\r\n\r\n    const onSelectEvent = (e)=>{\r\n        if (e.user._id === uid) {\r\n            dispatch( setActiveEvent( e ) );\r\n        }\r\n    }\r\n\r\n    const onViewChange = (e)=>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = e =>{\r\n        dispatch( clearActiveEvent() )\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 500 }}\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                view={ lastView }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={true}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            { activeEvent && <DeleteEventFab />}\r\n            <AddNewFab  />\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (isLoggedIn)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n\r\nconst PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={(props)=>(\r\n                (isLoggedIn)\r\n                ? (<Redirect to=\"/\" />)\r\n                : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\n  \r\nimport { startChecking } from '../actions/auth';\r\nimport LoginScreen from '../components/auth/LoginScreen';\r\nimport CalendarScreen from '../components/calendar/CalendarScreen';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nconst AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() )\r\n    }, [ dispatch ])\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Por favor espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PrivateRoute isLoggedIn={ !!uid } exact path=\"/\" component={CalendarScreen} />\r\n                    <PublicRoute  isLoggedIn={ !!uid } exact path=\"/login\" component={ LoginScreen } />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = (state= initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, \"hours\").toDate(),\r\n//     bgColor: \"#fafafa\",\r\n//     user: {\r\n//         _id: '123',\r\n//         name: \"José\"\r\n//     },\r\n//     id: hsdifhoihdioashdhdoh\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n            }\r\n        \r\n        case types.eventClear:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(event => event.id === action.payload.id ? action.payload : event)\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(event => event.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport AppRouter from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport \"./styles.css\";\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}